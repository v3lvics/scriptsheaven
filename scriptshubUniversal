# 22.12.24

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "SCRIPTS HEAVEN üåç ‚îÇ UNIVERSAL SCRIPT ",
   Icon = 15807158635, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "PREPARING...",
   LoadingSubtitle = "üíé DISCORD: YCQkDHTsXk üíé",
   Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "SCRIPTS HEAVEN"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "YCQkDHTsXk", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "To proceed enter our valid key üîë",
      Subtitle = "Key Validation",
      Note = "Get key at our Discord server for free! ", -- Use this to tell the user how to get a key
      FileName = "SCRIPTSfknb593NDbHUB", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://raw.githubusercontent.com/v3lvics/key/refs/heads/main/key"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})


local player = game.Players.LocalPlayer
local char = player.Character
local Tab = Window:CreateTab("Tab Example", "home")
local Section = Tab:CreateSection("Section Example")
local Divider = Tab:CreateDivider()

local Toggle = Tab:CreateToggle({
   Name = "Anchor Character",
   CurrentValue = false,
   Flag = "Anchor", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   char.HumanoidRootPart.Anchored = Value
   
   end,
})

local Slider = Tab:CreateSlider({
   Name = "Walking Speed",
   Range = {0, 100},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   char.Humanoid.WalkSpeed = Value


   end,
})

local Input = Tab:CreateInput({
   Name = "Input Example",
   CurrentValue = "",
   PlaceholderText = "Input Placeholder",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
   -- The function that takes place when the input is changed
   -- The variable (Text) is a string for the value in the text box
   end,
})

local Dropdown = Tab:CreateDropdown({
   Name = "Dropdown Example",
   Options = {"Option 1","Option 2"},
   CurrentOption = {"Option 1"},
   MultipleOptions = false,
   Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Options)
   -- The function that takes place when the selected option is changed
   -- The variable (Options) is a table of strings for the current selected options
   end,
})

Dropdown:Set({"Option 2"})

Rayfield:Notify({
   Title = "SCRIPTS HEAVEN üåç",
   Content = "Hub loaded. Enjoy exploiting! .gg/YCQkDHTsXk",
   Duration = 4,
   Image = "check",
})
