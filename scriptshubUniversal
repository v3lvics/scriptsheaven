local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "SCRIPTS HEAVEN üåç ‚îÇ UNIVERSAL SCRIPT ",
   Icon = "gift", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "DONT FORGET TO SHARE US!",
   LoadingSubtitle = "üíé DISCORD: .gg/YCQkDHTsXk üíé",
   Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "SCRIPTS HEAVEN"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "YCQkDHTsXk", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "To proceed enter our valid key üîë",
      Subtitle = "Key Validation",
      Note = "Get key at our Discord server for free! ", -- Use this to tell the user how to get a key
      FileName = "SCRIPTSfknb593NDbHUB", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://raw.githubusercontent.com/v3lvics/key/refs/heads/main/key"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "SCRIPTS HEAVEN üåç",
   Content = "Gathering Data...",
   Duration = 3.35,
   Image = "loader",
})
wait(1)
local teleportService = game:GetService('TeleportService')
local players = game:GetService("Players")
local player = game.Players.LocalPlayer
local char = player.Character
local Tab = Window:CreateTab("Home", "home")
local Player = Window:CreateTab("Player", "user")
local Spy = Window:CreateTab("Client", "gamepad")
local tab
local patched = Tab:CreateLabel("SCRIPTS HEAVEN PATCHED: DECEMBER - 2024", "heart")
local Paragraph = Tab:CreateParagraph({Title = "Thank you for using our Universal Script!", Content = "We are hardly working on this and we would LOVE your support by inviting people to our project. We offer more than our scripts, other scripts with bypassed Linkvertise and leaked/uncopylocked Roblox Games!"})

local warnesp = Spy:CreateLabel("ESP CAN NOT BE DISABLED.", "triangle-alert")
local ESP = Spy:CreateButton({
   Name = "ESP",
   Callback = function(Value)

local Players = game:GetService("Players")

local function ApplyHighlight(Player)
    local Connections = {}

    --// Parts
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local Humanoid = Character:WaitForChild("Humanoid")
    local HightLighter = Instance.new("Highlight", Character)

    local function UpdateFillColor()
        local DefaultColor = Color3.fromRGB(255, 48, 51)
        HightLighter.FillColor = (Player.TeamColor and Player.TeamColor.Color) or DefaultColor
    end

    local function Disconnect()
        HightLighter:Remove()
        
        for _, Connection in next, Connections do
            Connection:Disconnect()
        end
    end

    --// Connect functions to events
    table.insert(Connections, Player:GetPropertyChangedSignal("TeamColor"):Connect(UpdateFillColor))
    table.insert(Connections, Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        if Humanoid.Health <= 0 then
            Disconnect()
        end
    end))
end

local function HightLightPlayer(Player)
    if Player.Character then
        HightLightPlayer(Player)
    end
    Player.CharacterAdded:Connect(function()
        HightLightPlayer(Player)
    end)
end


--// Apply highlights to players
    for _, Player in next, Players:GetPlayers() do
    ApplyHighlight(Player)
    end
Players.PlayerAdded:Connect(ApplyHighlight)

end,
})

----

local Anchor = Player:CreateToggle({
   Name = "Anchor Character",
   CurrentValue = false,
   Flag = "Anchor", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    player.Character.HumanoidRootPart.Anchored = Value
   
   end,
})

local GodMode = Player:CreateToggle({
   Name = "God Mode",
   CurrentValue = false,
   Flag = "God", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    if Value == true then
             player.Character.Humanoid.MaxHealth = 10000000000000000000000000000000000000000000000000
             player.Character.Humanoid.Health = 10000000000000000000000000000000000000000000000000
       else
             player.Character.Humanoid.MaxHealth = 100
             player.Character.Humanoid.Health = 100
    end
    end,
})

local Heal = Player:CreateButton({
   Name = "Heal Me",
   Callback = function()
    player.Character.Humanoid.Health = tonumber(char.Humanoid.MaxHealth)
   end,
})

local Slider = Player:CreateSlider({
   Name = "Walking Speed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    player.Character.Humanoid.WalkSpeed = Value
   end,
})

local KickButton = Tab:CreateButton({
   Name = "Kick yourself",
   Callback = function()
   game.Players.LocalPlayer:Kick()
   end,
})

local Rejoin = Tab:CreateButton({
  
   Name = "Rejoin",
   Callback = function()
   teleportService:Teleport(game.PlaceId)
   end,
})

local GiveTools = Spy:CreateButton({
  
   Name = "Give All Tools Possible",
   Callback = function()
   for i,v in pairs(game.ReplicatedStorage:GetChildren()) do
       if v:IsA("Tool") then
           local tool = v:Clone()
            tool.Parent = player.Backpack
       end
       end
   end,
})

local tabdiv = Tab:CreateDivider()

local gameid = Tab:CreateLabel("Place ID: "..game.PlaceId, "settings")

local div = Tab:CreateDivider()
local plrage = Tab:CreateLabel("Account Age: "..player.AccountAge, "user")
local plrname = Tab:CreateLabel("Account Name: "..player.Name, "user")
local displayd = Tab:CreateLabel("Account Display Name: "..player.DisplayName, "user")



Rayfield:Notify({
   Title = "SCRIPTS HEAVEN üåç",
   Content = "Hub loaded. Enjoy exploiting! .gg/YCQkDHTsXk",
   Duration = 5,
   Image = "check",
})

Rayfield:Notify({
   Title = "SCRIPTS HEAVEN üåç",
   Content = "Please note that this script is UNIVERSAL, that means it should work for every game and will not have tons of functions.",
   Duration = 10,
   Image = "landmark",
})
